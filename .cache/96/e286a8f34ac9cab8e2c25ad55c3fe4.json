{"id":"index.html","dependencies":[{"name":"./main.js","dynamic":true,"resolved":"/home/l4crito/proyectos/l4crito/liss/be-mine/src/main.js","parent":"/home/l4crito/proyectos/l4crito/liss/be-mine/src/index.html"}],"generated":{"html":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>Page Title</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <script type=\"module\" src=\"/7a9076d6d94e62c13d641aa71f19ae8e.js\">\n\n        const FLOOR_HEIGHT = 48;\n        const JUMP_FORCE = 800;\n        const SPEED = 480;\n\n        // initialize context\n        kaboom();\n\n        // load assets\n        loadSprite(\"bean\", \"sprites/bean.png\");\n\n        scene(\"game\", () => {\n\n            // define gravity\n            gravity(2400);\n\n            // add a game object to screen\n            const player = add([\n                // list of components\n                sprite(\"bean\"),\n                pos(80, 40),\n                area(),\n                body(),\n            ]);\n\n            // floor\n            add([\n                rect(width(), FLOOR_HEIGHT),\n                outline(4),\n                pos(0, height()),\n                origin(\"botleft\"),\n                area(),\n                solid(),\n                color(127, 200, 255),\n            ]);\n\n            function jump() {\n                if (player.grounded()) {\n                    player.jump(JUMP_FORCE);\n                }\n            }\n\n            // jump when user press space\n            keyPress(\"space\", jump);\n            mouseClick(jump);\n\n            function spawnTree() {\n\n                // add tree obj\n                add([\n                    rect(48, rand(32, 96)),\n                    area(),\n                    outline(4),\n                    pos(width(), height() - FLOOR_HEIGHT),\n                    origin(\"botleft\"),\n                    color(255, 180, 255),\n                    move(LEFT, SPEED),\n                    \"tree\",\n                ]);\n\n                // wait a random amount of time to spawn next tree\n                wait(rand(0.5, 1.5), spawnTree);\n\n            }\n\n            // start spawning trees\n            spawnTree();\n\n            // lose if player collides with any game obj with tag \"tree\"\n            player.collides(\"tree\", () => {\n                // go to \"lose\" scene and pass the score\n                go(\"lose\", score);\n                burp();\n                addKaboom(player.pos);\n            });\n\n            // keep track of score\n            let score = 0;\n\n            const scoreLabel = add([\n                text(score),\n                pos(24, 24),\n            ]);\n\n            // increment score every frame\n            action(() => {\n                score++;\n                scoreLabel.text = score;\n            });\n\n        });\n\n        scene(\"lose\", (score) => {\n\n            add([\n                sprite(\"bean\"),\n                pos(width() / 2, height() / 2 - 80),\n                scale(2),\n                origin(\"center\"),\n            ]);\n\n            // display score\n            add([\n                text(score),\n                pos(width() / 2, height() / 2 + 80),\n                scale(2),\n                origin(\"center\"),\n            ]);\n\n            // go back to game with space is pressed\n            keyPress(\"space\", () => go(\"game\"));\n            mouseClick(() => go(\"game\"));\n\n        });\n\n        go(\"game\");\n    </script>\n\n</head>\n\n<body>\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"09838eca944fcf148bf4031148fa8b76","cacheData":{}}